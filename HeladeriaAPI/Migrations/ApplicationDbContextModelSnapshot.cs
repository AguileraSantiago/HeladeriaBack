// <auto-generated />
using System;
using HeladeriaAPI.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeladeriaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeladeriaAPI.Models.Categoria.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Frutales"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Granizados"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Al agua"
                        });
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Estado.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Disponible"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "No Disponible"
                        });
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Helado.Helado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsArtesanal")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Helados");
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Ingrediente.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "default"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Leche"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Azucar"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Alcohol"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Crema"
                        });
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Ingrediente.IngredienteHelado", b =>
                {
                    b.Property<int>("HeladoId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("HeladoId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("IngredienteHelado");
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Helado.Helado", b =>
                {
                    b.HasOne("HeladeriaAPI.Models.Categoria.Categoria", "Categoria")
                        .WithMany("Helados")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeladeriaAPI.Models.Estado.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Ingrediente.IngredienteHelado", b =>
                {
                    b.HasOne("HeladeriaAPI.Models.Helado.Helado", null)
                        .WithMany()
                        .HasForeignKey("HeladoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeladeriaAPI.Models.Ingrediente.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Categoria.Categoria", b =>
                {
                    b.Navigation("Helados");
                });
#pragma warning restore 612, 618
        }
    }
}
